// DP D11

// 好酷 @@

/*
好像不算正確，但還是不清掉的思路

            1 2 4 5  2  6
            5 3 2 3  5  2
    1 2 3 4 5 6 8 9 10 12
-------------------------
2 - 0 1 0 2 0 1 3 0  1  2
3 - 0 0 1 0 0 1 0 2  0  1
5 - 0 0 0 0 1 0 0 0  1  0

2 的倍數 - 1 2 4 6 8 10 12 16 ...
              ^
3 的倍數 - 1 3 6 9 12 15 18 ...
            ^
5 的倍數 - 1 5 10 15 20 25 30 ...
            ^ 
*/

/*
發現在想這題時一直有個盲點：我會把 p2, p3, p5 當成是 power (2^p2 * 3^p3 * 5^p5)
但他們不是!!

2/3/5
  1
-------------------------------------
 3/5   2
  1    2
-------------------------------------
  5    2   3
  1    2   3
-------------------------------------
  5       2/3  
  1    2   3  4
-------------------------------------
       5  2/3  
  1    2   3  4  5
-------------------------------------
       5   3  2  
  1    2   3  4  5 6
-------------------------------------
       5   3  2 
  1    2   3  4  5 6 8
-------------------------------------
       5     2/3 
  1    2   3  4  5 6 8  9
*/

// 偷討論區的作法
class Solution {
public:
    int nthUglyNumber(int n) {
        
        vector<int> table(n);
        table[0] = 1;
        int p2 = 0, p3 = 0, p5 = 0;
        
        for(int i = 1; i < n; i++) {
            table[i] = min(5 * table[p5], min(2 * table[p2], 3 * table[p3]));
            if(table[i] == 2 * table[p2]) p2++;
            if(table[i] == 3 * table[p3]) p3++;
            if(table[i] == 5 * table[p5]) p5++;
        }
        return table.back();
    }
};

/*
Runtime: 8 ms, faster than 80.02% of C++ online submissions for Ugly Number II.
Memory Usage: 7.6 MB, less than 66.56% of C++ online submissions for Ugly Number II.
*/
